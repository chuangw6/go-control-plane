// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.29.3
// source: envoy/extensions/filters/network/reverse_tunnel/v3/reverse_tunnel.proto

package reverse_tunnelv3

import (
	_ "github.com/cncf/xds/go/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for the reverse tunnel network filter.
// This filter handles reverse tunnel connection acceptance and rejection by processing
// HTTP requests where required identification values are provided via HTTP headers.
type ReverseTunnel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ping interval for health checks on established reverse tunnel connections.
	// If not specified, defaults to 2 seconds.
	PingInterval *durationpb.Duration `protobuf:"bytes,1,opt,name=ping_interval,json=pingInterval,proto3" json:"ping_interval,omitempty"`
	// Whether to automatically close connections after processing reverse tunnel requests.
	// When set to true, connections are closed after acceptance or rejection.
	// When set to false, connections remain open for potential reuse. Defaults to false.
	AutoCloseConnections bool `protobuf:"varint,2,opt,name=auto_close_connections,json=autoCloseConnections,proto3" json:"auto_close_connections,omitempty"`
	// HTTP path to match for reverse tunnel requests.
	// If not specified, defaults to "/reverse_connections/request".
	RequestPath string `protobuf:"bytes,3,opt,name=request_path,json=requestPath,proto3" json:"request_path,omitempty"`
	// HTTP method to match for reverse tunnel requests.
	// If not specified (“METHOD_UNSPECIFIED“), this defaults to “GET“.
	RequestMethod v3.RequestMethod `protobuf:"varint,4,opt,name=request_method,json=requestMethod,proto3,enum=envoy.config.core.v3.RequestMethod" json:"request_method,omitempty"`
}

func (x *ReverseTunnel) Reset() {
	*x = ReverseTunnel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseTunnel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseTunnel) ProtoMessage() {}

func (x *ReverseTunnel) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseTunnel.ProtoReflect.Descriptor instead.
func (*ReverseTunnel) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDescGZIP(), []int{0}
}

func (x *ReverseTunnel) GetPingInterval() *durationpb.Duration {
	if x != nil {
		return x.PingInterval
	}
	return nil
}

func (x *ReverseTunnel) GetAutoCloseConnections() bool {
	if x != nil {
		return x.AutoCloseConnections
	}
	return false
}

func (x *ReverseTunnel) GetRequestPath() string {
	if x != nil {
		return x.RequestPath
	}
	return ""
}

func (x *ReverseTunnel) GetRequestMethod() v3.RequestMethod {
	if x != nil {
		return x.RequestMethod
	}
	return v3.RequestMethod(0)
}

var File_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto protoreflect.FileDescriptor

var file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDesc = []byte{
	0x0a, 0x47, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x32, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x33, 0x1a, 0x1f, 0x65,
	0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x76, 0x33, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x75, 0x64, 0x70, 0x61, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x51, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0xaa,
	0x01, 0x0b, 0x22, 0x03, 0x08, 0xac, 0x02, 0x32, 0x04, 0x10, 0xc0, 0x84, 0x3d, 0x52, 0x0c, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x75, 0x74,
	0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x30, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x72, 0x08, 0x10, 0x01,
	0x18, 0xff, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x54, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0xcc, 0x01, 0xba, 0x80, 0xc8, 0xd1,
	0x06, 0x02, 0x10, 0x02, 0x0a, 0x40, 0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x33, 0x42, 0x12, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x6a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x33, 0x3b, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f,
	0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDescData = file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDesc
)

func file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDescData = protoimpl.X.CompressGZIP(file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDescData)
	})
	return file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDescData
}

var file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_goTypes = []interface{}{
	(*ReverseTunnel)(nil),       // 0: envoy.extensions.filters.network.reverse_tunnel.v3.ReverseTunnel
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
	(v3.RequestMethod)(0),       // 2: envoy.config.core.v3.RequestMethod
}
var file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.filters.network.reverse_tunnel.v3.ReverseTunnel.ping_interval:type_name -> google.protobuf.Duration
	2, // 1: envoy.extensions.filters.network.reverse_tunnel.v3.ReverseTunnel.request_method:type_name -> envoy.config.core.v3.RequestMethod
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_init() }
func file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_init() {
	if File_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseTunnel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto = out.File
	file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_rawDesc = nil
	file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_goTypes = nil
	file_envoy_extensions_filters_network_reverse_tunnel_v3_reverse_tunnel_proto_depIdxs = nil
}
